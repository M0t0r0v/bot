"""Add new models

Revision ID: 02
Revises: 01
Create Date: 2024-10-17 22:00:33.363876

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '02'
down_revision: Union[str, None] = '01'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('command',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comand_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('comand_name')
    )
    with op.batch_alter_table('command', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_command_id'), ['id'], unique=False)

    op.create_table('level',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('level')
    )
    with op.batch_alter_table('level', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_level_id'), ['id'], unique=False)

    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role')
    )
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_role_id'), ['id'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('sber_id', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('comand_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('role_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('level_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_users_role_id', 'role', ['role_id'], ['id'])
        batch_op.create_foreign_key('fk_users_comand_id', 'command', ['comand_id'], ['id'])
        batch_op.create_foreign_key('fk_users_level_id', 'level', ['level_id'], ['id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users') as batch_op:
        batch_op.drop_constraint('fk_users_role_id', type_='foreignkey')
        batch_op.drop_constraint('fk_users_comand_id', type_='foreignkey')
        batch_op.drop_constraint('fk_users_level_id', type_='foreignkey')
        batch_op.drop_column('level_id')
        batch_op.drop_column('role_id')
        batch_op.drop_column('comand_id')
        batch_op.drop_column('sber_id')

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_role_id'))

    op.drop_table('role')
    with op.batch_alter_table('level', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_level_id'))

    op.drop_table('level')
    with op.batch_alter_table('command', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_command_id'))

    op.drop_table('command')
    # ### end Alembic commands ###
